version: '3'
services: 
    node: 
        build: .
        ports: 
            - ${PORT}:${PORT}
        container_name: node
        depends_on:
            - postgres
        environment:
            - PORT=${PORT}             
        image: okrypets/nodejs
        volumes: 
            - .:/usr/app
        networks: 
            - network
        restart: on-failure
        env_file:
            - docker.env
    postgres:
        build: ./database
        container_name: postgres
        restart: on-failure
        ports: 
            - ${POSTGRES_PORT_HOST}:${POSTGRES_PORT}
        environment: 
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: /var/lib/postgresql/data
        image: okrypets/postgres
        networks: 
            - network
        volumes:  
            - ./pgdata:/var/lib/postgresql/data
networks:
    network: 
        driver: bridge
volumes: 
    pgdata:
    logs: